body{
  direction: ltr;
  text-align: justify;   /*blocked from 2 sides like in paper*/
  text-align: end; /*effected by direction chosen*/
  text-align: start; /*effected by direction chosen*/
  border:1px solid; /*will inherit color from the text!*/
}

/*
padding - controls the amount of space between the element and its border.
margin - controls the amount of space between an element's border and surrounding elements.
When you increase an element margin, it will increase the distance between its border and surrounding elements.
If you set an element's margin to a negative value, the element will grow larger.

CSS allows you to control the padding/margin of an element on all four sides with:
 padding-top, padding-right, padding-bottom, and padding-left properties.

 padding: 10px 20px 10px 20px;
 you can style your body element just like any other HTML element, and all your other elements will inherit your body element's styles.

margin: 2px 4px (top and bottom - 2; left right is 4px)
2px (top) 4px (sides) 6px (bottom)
 Sometimes your HTML elements will receive multiple styles that conflict with one another.

 prioritizing

 1. tag (body, h1 etc)
 2. class
 3. id -  id attribute will always take precedence over class
 4. inline style (in HTML itself) >> the most powerfull - will override all the CSS declarations in your style element. (element.style)
 5. class.class => the strongest
6. !importent - when you absolutely need to be sure that an element has specific CSS, you can use !important



Applying multiple class attributes to a HTML element is done with a space between them.
It doesn't matter which order the classes are listed in the HTML element.
However, the order of the class declarations in the <style> section are what is important.
The second declaration will always take precedence over the first.

We just proved that browsers read CSS from top to bottom. That means that,
in the event of a conflict, the browser will use whichever CSS declaration came last


HEX colors

RRGGBB => FFA500
The digit 0 is the lowest number in hex code, and represents a complete absence of color.
The digit F is the highest number in hex code, and represents the maximum possible brightness.

RGB = > specify the brightness of each color with a number between 0 and 255.
the two digits for one color equal 16 times 16, which gives us 256 total values
So RGB, which starts counting from zero, has the exact same number of possible values as hex code.

Just like with hex code, you can mix colors in RGB by using combinations of different values.

The RGB value for black looks like this:
rgb(0, 0, 0)
The RGB value for white looks like this:
rgb(255, 255, 255)
*/


/*
bootstrap

Bootstrap will figure out how wide your screen is and respond by resizing your HTML elements
<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css"/>
 class="img-responsive"
 button elements with a class of btn are only as wide as the text that they contain.
 btn-block -  button will stretch to fill page's entire horizontal space and any elements
 following it will flow onto a "new line" below the block. - This button would take up 100% of the available width.
text-primary
img-responsive

span element=> you can put several elements together, and even style different parts of the same element differently.
*/
